### IMPORTANT ###

- go over all files and find c -> cpp issues, like * where const T& should be used etc

- stop using strings, keep only hashes!

- require that resoruce store tells us to specify type enum and type enum names for that store... or is that possible??? the resource constains the enum hummm or wait, just use the type in the handle!

- temp allocator, some cool marcro thing that create a a variable and acts on it, what?


### LESS IMPORTANT ###

- make da_insert prettier

- magical central place where handle pools are registered with names and stuff and then we can give it a handle and it will tell us type and subtype information (with string names!!) from it. wow such types (fix resource_store.c create func)

- put renderer on own thread

- alpha support (something else than VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)

- rewrite obj loader, its ugly

- make first-person flying camera (see avatar.lua)

- combine linux_main and linux_xcb_window into main_linux_xcb_vulkan

- make renderer askable about source type, i.e. have shader_default_fragment as source string, and append whatever renderer tells us to do... or maybe just have a source_spirv field and ask renderer which field to pull, like with a SHADER_LANGAUGE_TYPE enum in the renderer

- in shader in parser, error if > 1 shader of a type

- add library shader compiler or invoke commandline shader compiler (so we can use glsl)

- make resource that is compiled into just a struct and then loaded quickly (data compiler)
