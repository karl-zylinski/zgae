{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"arr",
				"arr_free_handles"
			],
			[
				"MAX",
				"HANDLE_MAX_GENERATION"
			],
			[
				"subty",
				"subtype_index"
			],
			[
				"arr_",
				"arr_free_handles"
			],
			[
				"pool",
				"pool_type_index"
			],
			[
				"H",
				"HandlePool"
			],
			[
				"tests",
				"tests_files"
			],
			[
				"vertex",
				"vertex_input_num"
			],
			[
				"constant",
				"constant_buffers"
			],
			[
				"fields",
				"fields_num"
			],
			[
				"consnt",
				"constant_buffers"
			],
			[
				"resour",
				"resource_store"
			],
			[
				"resource_destro",
				"resource_destroy_internal"
			],
			[
				"mapp",
				"mapping_get_idx"
			],
			[
				"RESOU",
				"RESOURCE_TYPE_PIPELINE"
			],
			[
				"Resour",
				"ResourceHandle"
			],
			[
				"shader_",
				"shader_handle"
			],
			[
				"ext",
				"existing"
			],
			[
				"g_",
				"g_mapping"
			],
			[
				"resource_type",
				"resource_type_from_str"
			],
			[
				"RenderRes",
				"RendererResourceHandle"
			],
			[
				"SHADER",
				"SHADER_CONSTANT_BUFFER_AUTO_VALUE_MAT_MODEL_VIEW_PROJECTION"
			],
			[
				"constant_buff",
				"constant_buffers_num"
			],
			[
				"cons",
				"constant_buffers_num"
			],
			[
				"pipel",
				"Pipeline"
			],
			[
				"mema_re",
				"mema_replicate"
			],
			[
				"pipelin",
				"pipeline_resource"
			],
			[
				"Pipeli",
				"PipelineResource"
			],
			[
				"shader_st",
				"shader_stages"
			],
			[
				"prese",
				"present_modes"
			],
			[
				"stat",
				"static_analysis"
			],
			[
				"out_",
				"out_position"
			],
			[
				"mvp",
				"mvp_matrix"
			],
			[
				"backend",
				"backend_state"
			],
			[
				"cbi",
				"cbi_idx"
			],
			[
				"ConstantBUffer",
				"ShaderConstantBufferItem"
			],
			[
				"con",
				"constant_buffer"
			],
			[
				"shader_stages",
				"shader_stages_num"
			],
			[
				"RendererRes",
				"RendererResourcePipeline"
			],
			[
				"camera",
				"camera_pos"
			],
			[
				"Geometr",
				"GeometryIndex"
			],
			[
				"PA",
				"PARSE_MODE_ONLY_VERTICES"
			],
			[
				"Geome",
				"GeometryIndex"
			],
			[
				"Geom",
				"GeometryVertex"
			],
			[
				"inc",
				"includes_at"
			],
			[
				"bui",
				"build_error"
			],
			[
				"org",
				"org_filelines"
			],
			[
				"org_F",
				"org_filelines"
			],
			[
				"org_",
				"org_fp"
			],
			[
				"sou",
				"source"
			],
			[
				"aut",
				"auto_value"
			],
			[
				"input_",
				"input_layout_num"
			],
			[
				"source",
				"source_flr"
			],
			[
				"file_load",
				"file_load_res_t"
			],
			[
				"file_",
				"file_load_res_t"
			],
			[
				"allo",
				"alloc_callstacks"
			],
			[
				"callsta",
				"callstack_num"
			],
			[
				"alloc",
				"allocation_callstack_t"
			],
			[
				"back",
				"backtrace_size"
			],
			[
				"get_",
				"g_get_backtrace"
			],
			[
				"backtra",
				"backtrace_symbols"
			],
			[
				"funct",
				"function_calls"
			],
			[
				"geometry",
				"geometry_index_t"
			],
			[
				"vertices",
				"vertices_num"
			],
			[
				"geo",
				"geometry"
			],
			[
				"indices",
				"indices_num"
			],
			[
				"geom",
				"geometry_index_t"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"index",
				"index_buffer_memory"
			],
			[
				"vertex_buff",
				"vertex_buffer_memory"
			],
			[
				"verex",
				"vertex_buffer"
			],
			[
				"index_",
				"index_buffer"
			],
			[
				"VkDevi",
				"VkDeviceMemory"
			],
			[
				"index_buff",
				"index_buffer_memory"
			],
			[
				"ava",
				"available_layers"
			],
			[
				"Valida",
				"validation_layer_name"
			],
			[
				"non_er",
				"non_errors"
			],
			[
				"avail",
				"available_layers_num"
			],
			[
				"validat",
				"validation_layer_available"
			],
			[
				"vali",
				"validation_layer_name"
			]
		]
	},
	"buffers":
	[
		{
			"file": "handle_pool.c",
			"settings":
			{
				"buffer_size": 3422,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "todo.txt",
			"settings":
			{
				"buffer_size": 1542,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "array.c",
			"settings":
			{
				"buffer_size": 2094,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 17,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "renderer.c",
			"settings":
			{
				"buffer_size": 12135,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "resource_store.c",
			"settings":
			{
				"buffer_size": 12960,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "array.h",
			"settings":
			{
				"buffer_size": 1494,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "handle_pool.h",
			"settings":
			{
				"buffer_size": 414,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 65 files for \"handle_used\"\n\n/home/karl/Projects/zgae_c/handle_pool.c:\n   29  {\n   30      for (size_t i = 0; i < array_num(hp->arr_handles); ++i)\n   31:         check(!handle_used(hp->arr_handles[i]), \"Found handles in use while destroying handle pool\");\n   32  \n   33      for (u32 i = 0; i < HANDLE_MAX_TYPE_INDEX; ++i)\n   ..\n   51      for (size_t i = 0; i < array_num(hp->arr_handles); ++i)\n   52      {\n   53:         if (!handle_used(hp->arr_handles[i]))\n   54          {\n   55              Handle h = construct_handle(i, type_index, true);\n   ..\n   73  {\n   74      return    handle_index(h) < HANDLE_MAX_INDEX\n   75:            && handle_used(h)\n   76             && hp->types[handle_type(h)]\n   77             && handle_index(h) < array_num(hp->arr_handles)\n\n3 matches in 1 file\n\n\nSearching 65 files for \"TO_STRING\"\n\n0 matches\n\nSearching 65 files for \"handle_pool_create\"\n\n/home/karl/Projects/zgae_c/handle_pool.c:\n   12  } HandlePool;\n   13  \n   14: HandlePool* handle_pool_create(u32 type_index, const char* type_name)\n   15  {\n   16      check(type_index < HANDLE_MAX_TYPE_INDEX, \"type_index must be less than %d\", TO_STRING(HANDLE_MAX_TYPE_INDEX));\n\n/home/karl/Projects/zgae_c/handle_pool.h:\n    3  fwd_struct(HandlePool);\n    4  \n    5: HandlePool* handle_pool_create();\n    6  void handle_pool_set_subtype(HandlePool* hp, u32 subtype_index, const char* subtype_name);\n    7  void handle_pool_destroy(HandlePool* hp);\n\n/home/karl/Projects/zgae_c/renderer.c:\n   73  {\n   74      RendererState* rs = mema_zero(sizeof(RendererState));\n   75:     rs->resource_handle_pool = handle_pool_create();\n   76  \n   77      for (RendererResourceType s = 1; s < RENDERER_RESOURCE_TYPE_NUM; ++s)\n\n/home/karl/Projects/zgae_c/resource_store.c:\n  104      check(!g_hp && !g_rs, \"resource_store_init probably run twice\");\n  105  \n  106:     g_hp = handle_pool_create();\n  107      g_rs = rs;\n  108  \n\n/home/karl/Projects/zgae_c/zgae:\n    <binary>\n\n7 matches across 5 files\n\n\nSearching 65 files for \"get_resource\"\n\n/home/karl/Projects/zgae_c/renderer.c:\n   83  }\n   84  \n   85: static RendererResource* get_resource(RendererState* rs, RendererResourceHandle h)\n   86  {\n   87      RendererResource* rr = rs->da_resources + handle_index(h);\n   ..\n  127      {\n  128          const Resource* shader_resource = resource_lookup(pr->shader_stages[shdr_idx]);\n  129:         RendererResourceShader* srr = &get_resource(rs, shader_resource->rrh)->shader;\n  130          backend_shader_stages[shdr_idx] = srr->backend_state;\n  131          backend_shader_types[shdr_idx] = shader_resource->shader.type;\n  ...\n  340      Mat4 mvp_matrix = mat4_mul(&model_matrix, &proj_view_matrix);\n  341  \n  342:     const RendererResourcePipeline* pipeline = &get_resource(rs, pipeline_handle)->pipeline;\n  343      populate_constant_buffers(rs, pipeline, &model_matrix, &mvp_matrix);\n  344:     renderer_backend_draw(rs->rbs, pipeline->backend_state, get_resource(rs, geometry_handle)->geometry.backend_state);\n  345  }\n  346  \n\n/home/karl/Projects/zgae_c/zgae:\n    <binary>\n\n6 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 3083,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "global_include.h",
			"settings":
			{
				"buffer_size": 1517,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests.c",
			"settings":
			{
				"buffer_size": 1793,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.py",
			"settings":
			{
				"buffer_size": 1899,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "linux_main.c",
			"settings":
			{
				"buffer_size": 4105,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "zgae",
	"build_system_choices":
	[
		[
			[
				[
					"zgae",
					""
				],
				[
					"zgae",
					"build and run"
				]
			],
			[
				"zgae",
				"build and run"
			]
		],
		[
			[
				[
					"zgae",
					""
				],
				[
					"zgae",
					"build and run"
				],
				[
					"zgae",
					"static code analysis"
				]
			],
			[
				"zgae",
				"build and run"
			]
		],
		[
			[
				[
					"zgae",
					""
				],
				[
					"zgae",
					"build and run"
				],
				[
					"zgae",
					"static code analysis"
				],
				[
					"zgae",
					"build and run tests"
				]
			],
			[
				"zgae",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package contrl",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/karl/Projects/zgae_c"
	],
	"file_history":
	[
		"/home/karl/Projects/zgae_c/str.c",
		"/home/karl/Projects/zgae_c/shader_resource.c",
		"/home/karl/Projects/zgae_c/resource_store.c",
		"/home/karl/Projects/zgae_c/str.h",
		"/home/karl/Projects/zgae_c/handle_pool.c",
		"/home/karl/Projects/zgae_c/jzon.c",
		"/home/karl/Projects/zgae_c/resource_store.h",
		"/home/karl/Projects/zgae_c/linux_main.c",
		"/home/karl/Projects/zgae_c/shader_resource.h",
		"/home/karl/Projects/zgae_c/resource_types.h",
		"/home/karl/Projects/zgae_c/shader_resource_types.h",
		"/home/karl/Projects/zgae_c/pipeline_resource_types.h",
		"/home/karl/Projects/zgae_c/debug.c",
		"/home/karl/Projects/zgae_c/zgae.sublime-project",
		"/home/karl/Projects/zgae_c/renderer.c",
		"/home/karl/Projects/zgae_c/todo.txt",
		"/home/karl/Projects/zgae_c/global_include.h",
		"/home/karl/Projects/zgae_c/tests.c",
		"/home/karl/Projects/zgae_c/renderer.h",
		"/home/karl/Projects/zgae_c/array.c",
		"/home/karl/Projects/zgae_c/array.h",
		"/home/karl/Projects/zgae_c/file.c",
		"/home/karl/Projects/zgae_c/file_types.h",
		"/home/karl/Projects/zgae_c/build.py",
		"/home/karl/Projects/zgae_c/memory.c",
		"/home/karl/Projects/zgae_c/memory.h",
		"/home/karl/Projects/zgae_c/renderer_backend_vulkan.c",
		"/home/karl/Projects/zgae_c/gpu_types.h",
		"/home/karl/Projects/zgae_c/renderer_utils.h",
		"/home/karl/Projects/zgae_c/renderer_utils.c",
		"/home/karl/Projects/zgae_c/jzon.h",
		"/home/karl/Projects/zgae_c/jzon_types.h",
		"/home/karl/Projects/zgae_c/shader_default_vertex.glsl",
		"/home/karl/Projects/zgae_c/shader_default_fragment.glsl",
		"/home/karl/Projects/zgae_c/shader_default_vertex.shader",
		"/home/karl/Projects/zgae_c/pipeline_default.pipeline",
		"/home/karl/Projects/zgae_c/obj_loader.c",
		"/home/karl/Projects/zgae_c/debug.h",
		"/home/karl/Projects/zgae_c/time.h",
		"/home/karl/Projects/zgae_c/path.c",
		"/home/karl/Projects/zgae_c/file.h",
		"/home/karl/Projects/zgae_c/renderer_backend.h",
		"/home/karl/Projects/zgae/shader_default.hlsl",
		"/home/karl/Projects/zgae/game/main.lua",
		"/home/karl/Projects/zgae/game/avatar.lua",
		"/home/karl/Projects/zgae/renderer_direct3d.h",
		"/home/karl/Projects/zgae_c/pipeline_resource.h",
		"/home/karl/Projects/zgae_c/pipeline_resource.c",
		"/home/karl/Projects/zgae_c/handle_pool.h",
		"/home/karl/Projects/zgae_c/path.h",
		"/home/karl/Projects/zgae_c/obj_loader.h",
		"/home/karl/Projects/zgae_c/obj_loader_types.h",
		"/home/karl/Projects/zgae/renderer_direct3d.cpp",
		"/home/karl/Projects/zgae/render_world.h",
		"/home/karl/Projects/zgae_c/optimize_incfwd.py",
		"/home/karl/Projects/zgae_c/geometry_types.h",
		"/home/karl/Projects/zgae_c/shader.c",
		"/home/karl/Projects/zgae_c/box.wobj",
		"/home/karl/Projects/zgae_c/math.c",
		"/home/karl/Projects/zgae_c/math.h",
		"/home/karl/Projects/zgae_c/math_types.h",
		"/home/karl/Projects/zgae/obj.h",
		"/home/karl/Projects/zgae/obj.cpp",
		"/home/karl/Projects/zgae/math.h",
		"/home/karl/Projects/zgae/math.cpp",
		"/home/karl/Projects/zgae/types.h",
		"/home/karl/Projects/zgae/mesh.h",
		"/home/karl/Projects/zgae_c/shader.h",
		"/home/karl/Projects/zgae_c/debug_types.h",
		"/home/karl/Projects/zgae_c/pipeline.c",
		"/home/karl/Projects/zgae_c/pipeline.h",
		"/home/karl/Projects/zgae_c/pipeline_types.h",
		"/home/karl/Projects/zgae_c/zgae",
		"/home/karl/Projects/zgae_c/window_types.h",
		"/home/karl/Projects/zgae_c/keycode_types.h",
		"/home/karl/Projects/zgae_c/keyboard.h",
		"/home/karl/Projects/zgae_c/keyboard.c",
		"/home/karl/Projects/zgae_c/linux_xcb_window.c",
		"/home/karl/Projects/zgae_c/linux_xcb_window.h",
		"/home/karl/Projects/zgae_c/time.c",
		"/home/karl/Projects/zgae_c/optimize_includes.py",
		"/home/karl/Projects/zgae_c/geometry.h",
		"/home/karl/Projects/zgae_c/build_py.sublime-build",
		"/home/karl/Desktop/hei.txt",
		"/home/karl/.config/gtk-3.0/gtk.css",
		"/home/karl/gtk.css"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 116.0,
		"where_history":
		[
			"",
			"sizet",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"handle_index",
			"get_resource",
			"handle_pool_create",
			"s",
			"S",
			"s",
			"t",
			"handle_type",
			" //",
			"u32 ",
			"types",
			"TO_STRING",
			"handle_used",
			"sizet",
			"inputlayout",
			"input",
			"add_resource",
			"destroy_resource",
			"renderer_backend_destroy",
			"array_destroy",
			"destroy_all_resources",
			"renderer_load_shader",
			"fields[",
			"mema",
			"ShaderDataType",
			"shader_data_type_size",
			"\n\nShaderResource shader_resource_load(const char* filename)\n{\n    \n    return sr;\n}",
			"name_hash",
			" pl->pr.",
			"renderer_load_pipeline",
			"pipeline->pr.",
			"};\n",
			"table",
			"find_table_pair_insertion_index",
			"key_hash",
			"resource_load",
			"shader_resource_load",
			"shader_resource_laod",
			"da_reso",
			"handle_pool_set_type",
			".source",
			"pipeline_init",
			"shader_resource_load",
			"si.",
			"ShaderIntermediate",
			"jz_vif_type",
			"jz_vif_name",
			"shader_data_type_str_to_enum",
			"jz_cb_field",
			"jz_cb_field_type",
			"jz_cb_field_name",
			"cb",
			"si.",
			"sr.",
			"format_check",
			"SHADER_CONSTANT",
			"SHADER_",
			"cbi_idx",
			"pr->",
			"s->sr",
			"i",
			"i ",
			"cb_item_idx",
			"vi_idx",
			"shdr_idx",
			"GpuDataType",
			"ShaderIntermediate",
			"constant_buffers",
			"jz_il_item",
			"ili",
			"ShaderInputLayoutItem",
			"VertexInputField",
			"input_layout",
			"jz_il_arr",
			"ShaderConstantBufferAutoValue",
			"jz_cb_field_type",
			"jz_cb_item",
			"cbi",
			"ShaderConstantBufferItem",
			"vertex_input",
			"jz_cb_arr",
			"jz_cb_binding",
			"jz_cb_tbl",
			"jz_cbs_arr",
			"jz_ss_item",
			"jz_ss_arr",
			"jz_cb_arr",
			"pi",
			"vertex_",
			"_VERTEX_",
			"SHADER_INPUT_LAYOUT",
			"il_val_str_to_enum",
			"ShaderConstantBufferAutoValue",
			"PipelineIntermediate",
			"GPU_",
			"Gpu",
			"SHADER_",
			"ConstantBufferAutoValue",
			"ShaderInputLayoutItem",
			"ShaderConstantBuffer",
			"_VERTEX_",
			"SHADER_INPUT_LAYOUT_",
			"ShaderInputLayoutValue",
			"ShaderDataType",
			"ShaderConstantBufferItem",
			"ShaderConstantBufferAutoValue",
			"DataType",
			"SHADER_",
			"choose_surface_format",
			"create_framebuffers",
			"choose_swapchain_composite_alpha",
			"choose_swap",
			"choose_swapchain_present_mode",
			"get_surface_size",
			"choose_surface_format",
			"sumth",
			"current_frame",
			"vk_handle",
			") ",
			"in",
			" out",
			"out ",
			"out",
			"outColor",
			"out_",
			"out_world_position",
			"out_position",
			"."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"size_t",
			"Vec2u",
			"Vecu",
			"WindowOpenState",
			"WindowFocusLostCallback",
			"WindowResizedCallback",
			"WindowKeyReleasedCallback",
			"WindowKeyPressedCallback",
			"ShaderConstantBuffer",
			"ShaderInputLayoutItem",
			"ShaderInputLayoutValue",
			"ShaderConstantBufferItem",
			"ShaderConstantBufferAutoValue",
			"ShaderDataType",
			"ShaderType",
			"RendererBackendGeometry",
			"RendererBackendPipeline",
			"RendererBackendShader",
			"RendererBackendState",
			"ShaderIntermediate",
			"WindowType",
			"PipelineIntermediate",
			"RendererResourceHandle",
			"RendererState",
			"Color",
			"Vec4",
			"Vec3",
			"Vec2",
			"Quat",
			"Mat4",
			"WindowState",
			"xcb_connection_t",
			"WindowCallbacks",
			"XcbConnection",
			"XcbWindow",
			"KeyCode",
			"(f32",
			" f32 ",
			"JzonParseResult",
			"JzonValue",
			"i64",
			"i32",
			"i16",
			"i8",
			"u64",
			"u32",
			"u8",
			"sizet",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "handle_pool.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3422,
						"regions":
						{
						},
						"selection":
						[
							[
								1952,
								1952
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "todo.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1542,
						"regions":
						{
						},
						"selection":
						[
							[
								1542,
								1542
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 345.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "array.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2094,
						"regions":
						{
						},
						"selection":
						[
							[
								1588,
								1588
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 552.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "renderer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12135,
						"regions":
						{
						},
						"selection":
						[
							[
								7061,
								7061
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4207.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "resource_store.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12960,
						"regions":
						{
						},
						"selection":
						[
							[
								815,
								815
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 251.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "array.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1494,
						"regions":
						{
						},
						"selection":
						[
							[
								829,
								829
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "handle_pool.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 414,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3083,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										178,
										189
									],
									[
										438,
										449
									],
									[
										649,
										660
									],
									[
										982,
										1000
									],
									[
										1273,
										1291
									],
									[
										1594,
										1612
									],
									[
										1853,
										1871
									],
									[
										2107,
										2119
									],
									[
										2404,
										2416
									],
									[
										2741,
										2753
									],
									[
										2933,
										2945
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								2118,
								2118
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1518.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "global_include.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1517,
						"regions":
						{
						},
						"selection":
						[
							[
								1009,
								1009
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "tests.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1793,
						"regions":
						{
						},
						"selection":
						[
							[
								1614,
								1614
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 552.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "build.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1899,
						"regions":
						{
						},
						"selection":
						[
							[
								1432,
								1432
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 690.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "global_include.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1517,
						"regions":
						{
						},
						"selection":
						[
							[
								1009,
								1009
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 345.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "handle_pool.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3422,
						"regions":
						{
						},
						"selection":
						[
							[
								470,
								470
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "handle_pool.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 414,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "linux_main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4105,
						"regions":
						{
						},
						"selection":
						[
							[
								219,
								219
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 45.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 565.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "zgae",
	"project": "zgae.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"todo",
				"todo.txt"
			],
			[
				"git",
				".gitignore"
			],
			[
				"main",
				"linux_main.c"
			],
			[
				"bui",
				"build.py"
			],
			[
				"ha",
				"handle_pool.h"
			],
			[
				"res",
				"resource_store.c"
			],
			[
				"handle",
				"handle_pool.c"
			],
			[
				"handlep",
				"handle_pool.h"
			],
			[
				"glboa",
				"global_include.h"
			],
			[
				"tests",
				"tests.c"
			],
			[
				"glo",
				"global_include.h"
			],
			[
				"array",
				"array.h"
			],
			[
				"handl",
				"handle_pool.h"
			],
			[
				"globa",
				"global_include.h"
			],
			[
				"tesst",
				"tests.c"
			],
			[
				"zgae",
				"zgae.sublime-project"
			],
			[
				"glb",
				"global_include.h"
			],
			[
				"buil",
				"build.py"
			],
			[
				"gloab",
				"global_include.h"
			],
			[
				"",
				"handle_pool.c"
			],
			[
				"global",
				"global_include.h"
			],
			[
				"render",
				"renderer.c"
			],
			[
				"resour",
				"resource_types.h"
			],
			[
				"resou",
				"resource_types.h"
			],
			[
				"pipe",
				"pipeline_resource_types.h"
			],
			[
				"shader",
				"shader_resource_types.h"
			],
			[
				"resource",
				"resource_store.h"
			],
			[
				"resourc",
				"resource_store.c"
			],
			[
				"shae",
				"shader_resource.h"
			],
			[
				"memo",
				"memory.c"
			],
			[
				"de",
				"debug.c"
			],
			[
				"pipeline types",
				"pipeline_resource_types.h"
			],
			[
				"store.c",
				"resource_store.c"
			],
			[
				"jzon",
				"jzon.c"
			],
			[
				"arra",
				"array.h"
			],
			[
				"pipelineres",
				"pipeline_resource_types.h"
			],
			[
				"types",
				"resource_types.h"
			],
			[
				"renderer",
				"renderer.c"
			],
			[
				"str.",
				"str.h"
			],
			[
				"hND",
				"handle_pool.h"
			],
			[
				"hand",
				"handle_pool.h"
			],
			[
				"poo",
				"handle_pool.h"
			],
			[
				"rendeer",
				"renderer.h"
			],
			[
				"sha",
				"shader_resource.c"
			],
			[
				"ren",
				"renderer.c"
			],
			[
				"pipeline",
				"pipeline_resource.c"
			],
			[
				"shader_res",
				"shader_resource.c"
			],
			[
				"pipeline_res",
				"pipeline_resource.h"
			],
			[
				"mem",
				"memory.h"
			],
			[
				"shader types",
				"shader_resource_types.h"
			],
			[
				"pip",
				"pipeline_resource_types.h"
			],
			[
				"shader.",
				"shader.c"
			],
			[
				"tod",
				"todo.txt"
			],
			[
				"toto",
				"todo.txt"
			],
			[
				"file",
				"file.h"
			],
			[
				"arr",
				"array.h"
			],
			[
				"glob",
				"global_include.h"
			],
			[
				"render_b",
				"renderer_backend_vulkan.c"
			],
			[
				"obj",
				"obj_loader.c"
			],
			[
				"bac",
				"renderer_backend.h"
			],
			[
				"back",
				"renderer_backend_vulkan.c"
			],
			[
				"renderr",
				"renderer_backend.h"
			],
			[
				"objloader",
				"obj_loader_types.h"
			],
			[
				"opti",
				"optimize_includes.py"
			],
			[
				"mesh",
				"geometry_types.h"
			],
			[
				"li",
				"linux_main.c"
			],
			[
				"geo",
				"geometry_types.h"
			],
			[
				"ol",
				"obj_loader_types.h"
			],
			[
				"fi",
				"file_types.h"
			],
			[
				"geome",
				"geometry_types.h"
			],
			[
				"math.",
				"math.c"
			],
			[
				"math",
				"math.h"
			],
			[
				"goe",
				"geometry_types.h"
			],
			[
				"load",
				"obj_loader_types.h"
			],
			[
				"vulkan",
				"renderer_backend_vulkan.c"
			],
			[
				"linux_xc",
				"linux_xcb_window.c"
			],
			[
				"xcb",
				"linux_xcb_window.c"
			],
			[
				"vu",
				"renderer_backend_vulkan.c"
			],
			[
				"debug",
				"debug.h"
			],
			[
				"rend",
				"renderer.c"
			],
			[
				"backe",
				"renderer_backend_vulkan.c"
			],
			[
				"m",
				"memory.h"
			],
			[
				"str",
				"str.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
